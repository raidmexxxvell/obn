// Finish match admin button + full refresh logic
(function(){
  function setup(match, refs){
    const mdPane=refs.mdPane; if(!mdPane) return {cleanup(){}};
    const topbar=mdPane.querySelector('.match-details-topbar'); if(!topbar) return {cleanup(){}};
    const adminId=document.body.getAttribute('data-admin');
    const currentId=window.Telegram?.WebApp?.initDataUnsafe?.user?.id?String(window.Telegram.WebApp.initDataUnsafe.user.id):'';
    const isAdmin=!!(adminId && currentId && String(adminId)===currentId);
    if(!isAdmin) return {cleanup(){}};
    const prev=topbar.querySelector('#md-finish-btn'); if(prev) prev.remove();
    if(mdPane.__finishBtnTimer){ try { clearInterval(mdPane.__finishBtnTimer); } catch(_){} mdPane.__finishBtnTimer=null; }
    const btn=document.createElement('button'); btn.id='md-finish-btn'; btn.className='details-btn'; btn.textContent='Завершить матч'; btn.style.marginLeft='auto';
    const finStore=(window.__FINISHED_MATCHES=window.__FINISHED_MATCHES||{});
    const mkKey=(m)=>{ try { const dateStr=(m?.datetime||m?.date||'').toString().slice(0,10); return `${(m.home||'').toLowerCase().trim()}__${(m.away||'').toLowerCase().trim()}__${dateStr}`; } catch(_) { return `${(m.home||'').toLowerCase().trim()}__${(m.away||'').toLowerCase().trim()}__`; } };
    const mKey=mkKey(match);
    const isLiveNow=(mm)=>(window.MatchUtils?window.MatchUtils.isLiveNow(mm):false);
    const applyVisibility=()=>{ btn.style.display=(!finStore[mKey] && isLiveNow(match))? '':'none'; };
    applyVisibility(); mdPane.__finishBtnTimer=setInterval(applyVisibility,30000);
    const confirmFinish=()=>new Promise(resolve=>{ let ov=document.querySelector('.modal-overlay'); if(!ov){ ov=document.createElement('div'); ov.className='modal-overlay'; ov.style.position='fixed'; ov.style.inset='0'; ov.style.background='rgba(0,0,0,0.6)'; ov.style.zIndex='9999'; ov.style.display='flex'; ov.style.alignItems='center'; ov.style.justifyContent='center'; const box=document.createElement('div'); box.className='modal-box'; box.style.background='rgba(20,24,34,0.98)'; box.style.border='1px solid rgba(255,255,255,0.12)'; box.style.borderRadius='14px'; box.style.width='min(92vw,420px)'; box.style.padding='14px'; box.innerHTML='<div style="font-weight:700; font-size:16px; margin-bottom:8px;">Завершить матч?</div><div style="opacity:.9; font-size:13px; line-height:1.35; margin-bottom:12px;">Счёт будет записан, ставки рассчитаны. Продолжить?</div><div style="display:flex; gap:8px; justify-content:flex-end;"><button class="app-btn neutral" id="mf-cancel">Отмена</button><button class="app-btn danger" id="mf-ok">Завершить</button></div>'; ov.appendChild(box); document.body.appendChild(ov); box.querySelector('#mf-cancel').onclick=()=>{ ov.remove(); resolve(false); }; box.querySelector('#mf-ok').onclick=()=>{ ov.remove(); resolve(true); }; } else { resolve(false); } });
    const fullRefresh=async()=>{ try { const tg=window.Telegram?.WebApp||null; const fd=new FormData(); fd.append('initData', tg?.initData||''); await Promise.allSettled([ fetch('/api/league-table/refresh',{ method:'POST', body:fd }), fetch('/api/stats-table/refresh',{ method:'POST', body:fd }), fetch('/api/schedule/refresh',{ method:'POST', body:fd }), fetch('/api/results/refresh',{ method:'POST', body:fd }) ]); window.loadLeagueTable?.(); window.loadResults?.(); window.loadSchedule?.(); } catch(_){} };
  btn.addEventListener('click', async()=>{ const ok=await confirmFinish(); if(!ok) return; const tg=window.Telegram?.WebApp||null; btn.disabled=true; const old=btn.textContent; btn.textContent='Завершаю...'; try { const fd=new FormData(); fd.append('initData', tg?.initData||''); fd.append('home', match.home||''); fd.append('away', match.away||''); const r=await fetch('/api/match/settle',{ method:'POST', body:fd }); const d=await r.json().catch(()=>({})); if(!r.ok || d?.error) throw new Error(d?.error||'Ошибка завершения'); window.showAlert?.('Матч завершён','success'); try { if(d && d.total_bets!==undefined){ const msg=`Ставки: всего ${d.total_bets}, открытых до расчёта ${d.open_before}, изменено ${d.changed||0}, выиграло ${d.won||0}, проиграло ${d.lost||0}`; window.showAlert?.(msg,'info'); } } catch(_){} try { const dateStr=(match?.datetime||match?.date||'').toString().slice(0,10); const key=`stream:${(match.home||'').toLowerCase().trim()}__${(match.away||'').toLowerCase().trim()}__${dateStr}`; localStorage.removeItem(key); const sp=document.getElementById('md-pane-stream'); if(sp){ sp.style.display='none'; sp.innerHTML='<div class=\"stream-wrap\"><div class=\"stream-skeleton\">Трансляция недоступна</div></div>'; } } catch(_){} try { finStore[mKey]=true; } catch(_){} await fullRefresh(); btn.style.display='none'; const statusEl=mdPane.querySelector('.match-details-topbar .status-text'); if(statusEl) statusEl.textContent='Матч завершен'; } catch(e){ console.error('finish match error', e); window.showAlert?.(e?.message||'Ошибка','error'); } finally { btn.disabled=false; btn.textContent=old; } });
    topbar.appendChild(btn);
    return { cleanup(){ try { if(mdPane.__finishBtnTimer){ clearInterval(mdPane.__finishBtnTimer); mdPane.__finishBtnTimer=null; } } catch(_){} } };
  }
  window.MatchAdmin = { setup };
})();
